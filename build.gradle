plugins {
    id 'jacoco'
    id 'idea'
    id 'org.jetbrains.kotlin.jvm' version '1.3.20'
    id 'org.jetbrains.kotlin.kapt' version '1.3.20'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.3.20'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.3.20'
    id 'org.springframework.boot' version '2.1.2.RELEASE'
    id "io.zensoft.versioning" version "1.0.0"
}

apply plugin: "io.spring.dependency-management"

group = 'io.openfuture.chain'
sourceCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
}

dependencies {
    // Kotlin
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    compile("org.jetbrains.kotlin:kotlin-reflect")
    compile("com.fasterxml.jackson.module:jackson-module-kotlin")
    compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310')

    // Spring
    compile('org.springframework.boot:spring-boot-starter-webflux')
    compile("org.springframework.boot:spring-boot-starter-freemarker")
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-web')

    // Cache
    compile('com.github.ben-manes.caffeine:caffeine')

    // DB
    compile('org.flywaydb:flyway-core')
    compile('com.h2database:h2')

    // Utils
    compile('commons-net:commons-net:3.6')
    compile('org.apache.commons:commons-lang3:3.7')
    compile('com.github.oshi:oshi-core:3.5.0')

    // DevTools
    runtime('org.springframework.boot:spring-boot-devtools')
    kapt('org.springframework.boot:spring-boot-configuration-processor')

    //Cryptography
    compile("org.bouncycastle:bcprov-jdk15on:1.59")

    //JAXB
    compile("javax.xml.bind:jaxb-api:2.3.0")

    // Byte code
    compile("org.ow2.asm:asm:7.0")
    compile("org.ow2.asm:asm-commons:7.0")

    // SDK
    compile("io.openfuture:chain-kotlin-sdk") {
        exclude group: 'org.slf4j'
    }

    // Tests
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('io.projectreactor:reactor-test')
}

sourceSets {
    main.kotlin.srcDirs += 'src/main/kotlin'
    main.resources.srcDirs += 'frontend/build/resources'
}

// Jar
jar {
    manifest {
        attributes("Implementation-Version": version)
    }
}

// Kotlin
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
noArg {
    annotations(
            "javax.persistence.MappedSuperclass",
            "javax.persistence.Entity",
            "io.openfuture.chain.core.annotation.NoArgConstructor"
    )
}
allOpen {
    annotations(
            "javax.persistence.MappedSuperclass",
            "javax.persistence.Entity",
            "io.openfuture.chain.core.annotation.OpenClass"
    )
}

// IDEA
idea {
    module {
        def kaptMain = file('build/generated/source/kapt/main')
        sourceDirs += kaptMain
        generatedSourceDirs += kaptMain
    }
}

// Jacoco
jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}
check.dependsOn jacocoTestReport